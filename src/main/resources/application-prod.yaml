
# ===================================
# Production Configuration
# ===================================

server:
  port: ${PORT:8080}

spring:

  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:food_stack}
    username: ${DB_USERNAME:food_stack_user}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
        connection:
          provider_disables_autocommit: true
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

# Logging Configuration
logging:
  level:
    org:
      springframework:
        web: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
        stat: DEBUG

  # H2 Console (disabled in production)
  h2:
    console:
      enabled: false

  servlet:
    compression:
      enabled: true
      mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# AWS Configuration (for development - using localstack or test credentials)
cloud:
  aws:
    region: eu-central-1
    credentials:
      access-key: ${AWS_CREDENTIALS_ACCESS_KEY}
      secret-key: ${AWS_CREDENTIALS_SECRET_KEY}
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}

#  JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:3600000} # 1 hour in production
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000} # 24 hours